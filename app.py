# Import c√°c th∆∞ vi·ªán
import streamlit as st
import os
from dotenv import load_dotenv
import google.generativeai as genai

# Import c√°c th√†nh ph·∫ßn c·ªßa LangChain
from langchain_google_genai import ChatGoogleGenerativeAI
from langchain_community.document_loaders import PyPDFLoader
from langchain.text_splitter import RecursiveCharacterTextSplitter
from langchain_community.vectorstores import FAISS
from langchain.chains import ConversationalRetrievalChain
from langchain.memory import ConversationBufferMemory
from langchain_huggingface import HuggingFaceEmbeddings

def main():
    load_dotenv()
    
    api_key = os.getenv("GOOGLE_API_KEY")
    if not api_key:
        st.error("Ch∆∞a t√¨m th·∫•y Google API Key! Vui l√≤ng th√™m key v√†o file .env.")
        return
    genai.configure(api_key=api_key)

    st.set_page_config(page_title="H·ªèi ƒê√°p T√†i Li·ªáu Ti·∫øng Vi·ªát Mi·ªÖn Ph√≠", page_icon="üáªüá≥")
    st.header("Chatbot H·ªèi-ƒê√°p Mi·ªÖn ph√≠ v·ªõi Google Gemini üöÄ")

    if "conversation" not in st.session_state:
        st.session_state.conversation = None
    if "chat_history" not in st.session_state:
        st.session_state.chat_history = []

    user_question = st.text_input("ƒê·∫∑t c√¢u h·ªèi v·ªÅ n·ªôi dung t√†i li·ªáu c·ªßa b·∫°n:")
    if user_question:
        if st.session_state.conversation:
            response = st.session_state.conversation.invoke({"question": user_question})
            st.session_state.chat_history = response['chat_history']
            
            for i, message in enumerate(st.session_state.chat_history):
                if i % 2 == 0:
                    st.write(f"**B·∫°n:** {message.content}")
                else:
                    st.write(f"**Chatbot:** {message.content}")
        else:
            st.warning("Vui l√≤ng t·∫£i l√™n t√†i li·ªáu v√† nh·∫•n 'X·ª≠ l√Ω' tr∆∞·ªõc.")

    with st.sidebar:
        st.subheader("T√†i li·ªáu c·ªßa b·∫°n")
        pdf_docs = st.file_uploader(
            "T·∫£i l√™n c√°c t·ªáp PDF v√† nh·∫•n 'X·ª≠ l√Ω'",
            accept_multiple_files=True,
            type="pdf"
        )
        if st.button("X·ª≠ l√Ω"):
            if pdf_docs:
                with st.spinner("ƒêang x·ª≠ l√Ω t√†i li·ªáu, vui l√≤ng ch·ªù..."):
                    text = ""
                    for pdf in pdf_docs:
                        with open(pdf.name, "wb") as f:
                            f.write(pdf.getbuffer())
                        loader = PyPDFLoader(pdf.name)
                        documents = loader.load()
                        for doc in documents:
                            text += doc.page_content
                        os.remove(pdf.name)

                    text_splitter = RecursiveCharacterTextSplitter(
                        chunk_size=1000,
                        chunk_overlap=200,
                        length_function=len
                    )
                    chunks = text_splitter.split_text(text=text)

                    embeddings = HuggingFaceEmbeddings(
                        model_name="dangvantuan/vietnamese-embedding"
                    )
                    
                    vector_store = FAISS.from_texts(chunks, embedding=embeddings)
                    
                    llm = ChatGoogleGenerativeAI(model="gemini-1.5-flash", temperature=0.7)
                    
                    st.session_state.conversation = ConversationalRetrievalChain.from_llm(
                        llm=llm,
                        retriever=vector_store.as_retriever(),
                        memory=ConversationBufferMemory(memory_key='chat_history', return_messages=True)
                    )
                    
                    st.success("X·ª≠ l√Ω ho√†n t·∫•t! B·∫°n c√≥ th·ªÉ b·∫Øt ƒë·∫ßu h·ªèi ƒë√°p.")
            else:
                st.warning("Vui l√≤ng t·∫£i l√™n √≠t nh·∫•t m·ªôt t·ªáp PDF.")

if __name__ == '__main__':
    main()